// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(PointsContext))]
    partial class PointsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("DataAccess.Models.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<double>("Radius")
                        .HasColumnType("REAL");

                    b.Property<double>("X")
                        .HasColumnType("REAL");

                    b.Property<double>("Y")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Points");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "yellow",
                            Radius = 25.0,
                            X = 125.0,
                            Y = 125.0
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Point", b =>
                {
                    b.OwnsMany("DataAccess.Models.Comment", "Comments", b1 =>
                        {
                            b1.Property<int>("PointId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("BackgroundColor")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Text")
                                .HasColumnType("TEXT");

                            b1.HasKey("PointId", "Id");

                            b1.ToTable("Comments");

                            b1.WithOwner()
                                .HasForeignKey("PointId");

                            b1.HasData(
                                new
                                {
                                    PointId = 1,
                                    Id = 11,
                                    BackgroundColor = "red",
                                    Text = "Comment from SQL"
                                });
                        });

                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
